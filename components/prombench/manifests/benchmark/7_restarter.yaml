apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-test-config-restarter
  namespace: prombench-{{ .PR_NUMBER }}
data:
  prometheus_pr.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: prometheus-test-pr-{{ .PR_NUMBER }}
      namespace: prombench-{{ .PR_NUMBER }}
      labels:
        app: prometheus
        prometheus: test-pr-{{ .PR_NUMBER }}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: prometheus
          prometheus: test-pr-{{ .PR_NUMBER }}
      template:
        metadata:
          namespace: prombench-{{ .PR_NUMBER }}
          labels:
            app: prometheus
            prometheus: test-pr-{{ .PR_NUMBER }}
        spec:
          serviceAccountName: prometheus
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - prometheus
          securityContext:
            runAsUser: 0
          containers:
          - name: prometheus
            image: quay.io/prometheus/busybox:latest
            imagePullPolicy: Always
            command: [ "/usr/bin/tini", "--"]
            args: [
              "/usr/bin/prometheus",
              "--web.external-url=http://prombench.prometheus.io/{{ .PR_NUMBER }}/prometheus-pr",
              "--storage.tsdb.path=/prometheus",
              "--web.console.libraries=/usr/bin/console_libraries",
              "--web.console.templates=/usr/bin/consoles",
              "--config.file=/etc/prometheus/prometheus.yml",
              "--log.level=debug"
            ]
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/sh", "-c", "killall -9 prometheus"]
            volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: instance-ssd
              mountPath: /prometheus
            - name: executables
              mountPath: /usr/bin
            ports:
            - name: prom-web
              containerPort: 9090
          volumes:
          - name: config-volume
            configMap:
              name: prometheus-test
          - name: instance-ssd
            hostPath:
              path: /mnt/disks/ssd0 #gke ssds
          - name: executables
            persistentVolumeClaim:
              claimName: prometeus-builder-volume
              readOnly: true
          terminationGracePeriodSeconds: 300
          nodeSelector:
            cloud.google.com/gke-nodepool: prometheus-{{ .PR_NUMBER }}
            isolation: prometheus
  prometheus_master.yaml: |
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: prometheus-test-{{ normalise .RELEASE }}
      namespace: prombench-{{ .PR_NUMBER }}
      labels:
        app: prometheus
        prometheus: test-{{ normalise .RELEASE }}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: prometheus
          prometheus: test-{{ normalise .RELEASE }}
      template:
        metadata:
          namespace: prombench-{{ .PR_NUMBER }}
          labels:
            app: prometheus
            prometheus: test-{{ normalise .RELEASE }}
        spec:
          serviceAccountName: prometheus
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - prometheus
          securityContext:
            runAsUser: 0
          containers:
          - name: prometheus
            image: quay.io/prometheus/prometheus:{{ .RELEASE }}
            imagePullPolicy: Always
            command: ["/usr/bin/tini", "--"]
            args: [
              "/bin/prometheus",
              "--web.external-url=http://prombench.prometheus.io/{{ .PR_NUMBER }}/prometheus-release",
              "--storage.tsdb.path=/prometheus",
              "--web.console.libraries=/etc/prometheus/console_libraries",
              "--web.console.templates=/etc/prometheus/consoles",
              "--config.file=/etc/prometheus/prometheus.yml",
              "--log.level=debug"
            ]
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/sh", "-c", "killall -9 prometheus"]
            volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus
            - name: instance-ssd
              mountPath: /prometheus
            - name: executables
              mountPath: /usr/bin
            ports:
            - name: prom-web
              containerPort: 9090
          volumes:
          - name: config-volume
            configMap:
              name: prometheus-test
          - name: instance-ssd
            hostPath:
              path: /mnt/disks/ssd0 #gke ssds
          - name: executables
            persistentVolumeClaim:
              claimName: prometeus-builder-volume
              readOnly: true
          terminationGracePeriodSeconds: 300
          nodeSelector:
            cloud.google.com/gke-nodepool: prometheus-{{ .PR_NUMBER }}
            isolation: prometheus

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-loadgen-restarter
  namespace: prombench-{{ .PR_NUMBER }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loadgen-restarter
  template:
    metadata:
      namespace: prombench-{{ .PR_NUMBER }}
      labels:
        app: loadgen-restarter
    spec:
      serviceAccountName: loadgen-restarter
      containers:
      - name: prom-load-generator
        image: docker.io/geekodour/restarter:graceperiod
        imagePullPolicy: Always
        args:
        - "restart"
        - "-f"
        - "/etc/restarter/prometheus_master.yaml"
        - "-f"
        - "/etc/restarter/prometheus_pr.yaml"
        - "-v"
        - "PR_NUMBER:{{ .PR_NUMBER }}"
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /etc/restarter
      volumes:
      - name: prometheus-config-volume
        configMap:
          name: prometheus-test-config-restarter
      nodeSelector:
        cloud.google.com/gke-nodepool: nodes-{{ .PR_NUMBER }}
        isolation: none